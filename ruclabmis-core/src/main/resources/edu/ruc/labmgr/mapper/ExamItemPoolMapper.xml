<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ruc.labmgr.mapper.ExamItemPoolMapper">
    <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.ExamItemPool">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="difficulty" property="difficulty" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="substance" property="substance" jdbcType="VARCHAR"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="curriculum_id" property="curriculumId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Criteria_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Criteria_Where_Clause">
        <where>
            <foreach collection="criteria.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, difficulty, type, substance, answer, curriculum_id
  </sql>
    <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ExamItemPoolCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from exam_item_pool
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from exam_item_pool
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_item_pool
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByCriteria" parameterType="edu.ruc.labmgr.domain.ExamItemPoolCriteria">
        delete from exam_item_pool
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="edu.ruc.labmgr.domain.ExamItemPool">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into exam_item_pool (id, name, difficulty,
        type, substance, answer,
        curriculum_id)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{difficulty,jdbcType=INTEGER},
        #{type,jdbcType=INTEGER}, #{substance,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR},
        #{curriculumId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.ExamItemPool">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into exam_item_pool
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="difficulty != null">
                difficulty,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="substance != null">
                substance,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="curriculumId != null">
                curriculum_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="difficulty != null">
                #{difficulty,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="substance != null">
                #{substance,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="curriculumId != null">
                #{curriculumId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.ExamItemPoolCriteria"
            resultType="java.lang.Integer">
        select count(*) from exam_item_pool
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
    </select>
    <update id="updateByCriteriaSelective" parameterType="map">
        update exam_item_pool
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.difficulty != null">
                difficulty = #{record.difficulty,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.substance != null">
                substance = #{record.substance,jdbcType=VARCHAR},
            </if>
            <if test="record.answer != null">
                answer = #{record.answer,jdbcType=VARCHAR},
            </if>
            <if test="record.curriculumId != null">
                curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Criteria_Where_Clause"/>
        </if>
    </update>
    <update id="updateByCriteria" parameterType="map">
        update exam_item_pool
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        difficulty = #{record.difficulty,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        substance = #{record.substance,jdbcType=VARCHAR},
        answer = #{record.answer,jdbcType=VARCHAR},
        curriculum_id = #{record.curriculumId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Criteria_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.ExamItemPool">
        update exam_item_pool
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="difficulty != null">
                difficulty = #{difficulty,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="substance != null">
                substance = #{substance,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="curriculumId != null">
                curriculum_id = #{curriculumId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.ExamItemPool">
    update exam_item_pool
    set name = #{name,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      substance = #{substance,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      curriculum_id = #{curriculumId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ExamItemPoolCriteria"
            id="selectByCriteriaWithRowbounds">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from exam_item_pool
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>