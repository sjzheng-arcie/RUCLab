<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ruc.labmgr.mapper.ExperimentMapper" >
  <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.Experiment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="curriculum_id" property="curriculumId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="need_report" property="needReport" jdbcType="BIT" />
    <result column="report_deadline" property="reportDeadline" jdbcType="DATE" />
    <result column="template_path" property="templatePath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, content, curriculum_id, status, need_report, report_deadline, template_path
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ExperimentCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experiment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from experiment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from experiment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ruc.labmgr.domain.ExperimentCriteria" >
    delete from experiment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ruc.labmgr.domain.Experiment" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into experiment (name, content, curriculum_id, 
      status, need_report, report_deadline, 
      template_path)
    values (#{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{curriculumId,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT}, #{needReport,jdbcType=BIT}, #{reportDeadline,jdbcType=DATE}, 
      #{templatePath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.Experiment" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into experiment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="curriculumId != null" >
        curriculum_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="needReport != null" >
        need_report,
      </if>
      <if test="reportDeadline != null" >
        report_deadline,
      </if>
      <if test="templatePath != null" >
        template_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="curriculumId != null" >
        #{curriculumId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="needReport != null" >
        #{needReport,jdbcType=BIT},
      </if>
      <if test="reportDeadline != null" >
        #{reportDeadline,jdbcType=DATE},
      </if>
      <if test="templatePath != null" >
        #{templatePath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ruc.labmgr.domain.ExperimentCriteria" resultType="java.lang.Integer" >
    select count(*) from experiment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update experiment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.curriculumId != null" >
        curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.needReport != null" >
        need_report = #{record.needReport,jdbcType=BIT},
      </if>
      <if test="record.reportDeadline != null" >
        report_deadline = #{record.reportDeadline,jdbcType=DATE},
      </if>
      <if test="record.templatePath != null" >
        template_path = #{record.templatePath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update experiment
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      need_report = #{record.needReport,jdbcType=BIT},
      report_deadline = #{record.reportDeadline,jdbcType=DATE},
      template_path = #{record.templatePath,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.Experiment" >
    update experiment
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="curriculumId != null" >
        curriculum_id = #{curriculumId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="needReport != null" >
        need_report = #{needReport,jdbcType=BIT},
      </if>
      <if test="reportDeadline != null" >
        report_deadline = #{reportDeadline,jdbcType=DATE},
      </if>
      <if test="templatePath != null" >
        template_path = #{templatePath,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.Experiment" >
    update experiment
    set name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      curriculum_id = #{curriculumId,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      need_report = #{needReport,jdbcType=BIT},
      report_deadline = #{reportDeadline,jdbcType=DATE},
      template_path = #{templatePath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ExperimentCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experiment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>