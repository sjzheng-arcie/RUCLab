<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ruc.labmgr.mapper.WorkMapper">
  <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.Work">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="workerId" jdbcType="INTEGER" property="workerid" />
    <result column="ifRead" jdbcType="BIT" property="ifread" />
    <result column="publishTime" jdbcType="TIMESTAMP" property="publishtime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
      <association column="workerId" javaType="User" property="worker" select="edu.ruc.labmgr.mapper.UserMapper.selectByPrimaryKey" />
  </resultMap>
  <sql id="Criteria_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause">
    <where>
      <foreach collection="criteria.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, workerId, ifRead, publishTime, content
  </sql>
  <select id="selectByCriteria" parameterType="edu.ruc.labmgr.domain.WorkCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from work
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="edu.ruc.labmgr.domain.WorkCriteria">
    delete from work
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ruc.labmgr.domain.Work">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work (title, workerId, ifRead, 
      publishTime, content)
    values (#{title,jdbcType=VARCHAR}, #{workerid,jdbcType=INTEGER}, #{ifread,jdbcType=BIT}, 
      #{publishtime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.Work">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="workerid != null">
        workerId,
      </if>
      <if test="ifread != null">
        ifRead,
      </if>
      <if test="publishtime != null">
        publishTime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="workerid != null">
        #{workerid,jdbcType=INTEGER},
      </if>
      <if test="ifread != null">
        #{ifread,jdbcType=BIT},
      </if>
      <if test="publishtime != null">
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.WorkCriteria" resultType="java.lang.Integer">
    select count(*) from work
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map">
    update work
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.workerid != null">
        workerId = #{record.workerid,jdbcType=INTEGER},
      </if>
      <if test="record.ifread != null">
        ifRead = #{record.ifread,jdbcType=BIT},
      </if>
      <if test="record.publishtime != null">
        publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update work
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      workerId = #{record.workerid,jdbcType=INTEGER},
      ifRead = #{record.ifread,jdbcType=BIT},
      publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.Work">
    update work
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="workerid != null">
        workerId = #{workerid,jdbcType=INTEGER},
      </if>
      <if test="ifread != null">
        ifRead = #{ifread,jdbcType=BIT},
      </if>
      <if test="publishtime != null">
        publishTime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.Work">
    update work
    set title = #{title,jdbcType=VARCHAR},
      workerId = #{workerid,jdbcType=INTEGER},
      ifRead = #{ifread,jdbcType=BIT},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCriteriaWithRowbounds" parameterType="edu.ruc.labmgr.domain.WorkCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>