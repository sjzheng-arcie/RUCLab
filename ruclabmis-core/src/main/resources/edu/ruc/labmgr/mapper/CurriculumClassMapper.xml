<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ruc.labmgr.mapper.CurriculumClassMapper">
    <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.CurriculumClass">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="curriculum_id" property="curriculumId" jdbcType="INTEGER"/>
        <result column="student_id" property="studentId" jdbcType="INTEGER"/>
        <result column="usual_performance" property="usualPerformance" jdbcType="SMALLINT"/>
        <result column="final_grade" property="finalGrade" jdbcType="SMALLINT"/>
    </resultMap>
    <sql id="Criteria_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Criteria_Where_Clause">
        <where>
            <foreach collection="criteria.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, curriculum_id, student_id, usual_performance, final_grade
  </sql>
    <select id="selectByCriteria" resultMap="BaseResultMap"
            parameterType="edu.ruc.labmgr.domain.CurriculumClassCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from curriculum_class
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from curriculum_class
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from curriculum_class
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByCriteria" parameterType="edu.ruc.labmgr.domain.CurriculumClassCriteria">
        delete from curriculum_class
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="edu.ruc.labmgr.domain.CurriculumClass">
    insert into curriculum_class (id, curriculum_id, student_id, 
      usual_performance, final_grade)
    values (#{id,jdbcType=INTEGER}, #{curriculumId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{usualPerformance,jdbcType=SMALLINT}, #{finalGrade,jdbcType=SMALLINT})
  </insert>
    <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.CurriculumClass">
        insert into curriculum_class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="curriculumId != null">
                curriculum_id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="usualPerformance != null">
                usual_performance,
            </if>
            <if test="finalGrade != null">
                final_grade,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="curriculumId != null">
                #{curriculumId,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="usualPerformance != null">
                #{usualPerformance,jdbcType=SMALLINT},
            </if>
            <if test="finalGrade != null">
                #{finalGrade,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.CurriculumClassCriteria"
            resultType="java.lang.Integer">
        select count(*) from curriculum_class
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
    </select>
    <update id="updateByCriteriaSelective" parameterType="map">
        update curriculum_class
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.curriculumId != null">
                curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
            </if>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=INTEGER},
            </if>
            <if test="record.usualPerformance != null">
                usual_performance = #{record.usualPerformance,jdbcType=SMALLINT},
            </if>
            <if test="record.finalGrade != null">
                final_grade = #{record.finalGrade,jdbcType=SMALLINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Criteria_Where_Clause"/>
        </if>
    </update>
    <update id="updateByCriteria" parameterType="map">
        update curriculum_class
        set id = #{record.id,jdbcType=INTEGER},
        curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
        student_id = #{record.studentId,jdbcType=INTEGER},
        usual_performance = #{record.usualPerformance,jdbcType=SMALLINT},
        final_grade = #{record.finalGrade,jdbcType=SMALLINT}
        <if test="_parameter != null">
            <include refid="Update_By_Criteria_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.CurriculumClass">
        update curriculum_class
        <set>
            <if test="curriculumId != null">
                curriculum_id = #{curriculumId,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="usualPerformance != null">
                usual_performance = #{usualPerformance,jdbcType=SMALLINT},
            </if>
            <if test="finalGrade != null">
                final_grade = #{finalGrade,jdbcType=SMALLINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.CurriculumClass">
    update curriculum_class
    set curriculum_id = #{curriculumId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      usual_performance = #{usualPerformance,jdbcType=SMALLINT},
      final_grade = #{finalGrade,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.CurriculumClassCriteria"
            id="selectByCriteriaWithRowbounds">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from curriculum_class
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>