<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ruc.labmgr.mapper.ViewStoreMapper">
    <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.ViewStore">
        <result column="application_id" jdbcType="INTEGER" property="applicationId" />
        <result column="application_sn" jdbcType="VARCHAR" property="applicationSn" />
        <result column="applicant_id" jdbcType="INTEGER" property="applicantId" />
        <result column="applicant_name" jdbcType="VARCHAR" property="applicantName" />
        <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
        <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
        <result column="approver_id" jdbcType="INTEGER" property="approverId" />
        <result column="approver_name" jdbcType="VARCHAR" property="approverName" />
        <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
        <result column="process_time" property="processTime" jdbcType="TIMESTAMP" />
        <result column="application_state_id" jdbcType="INTEGER" property="applicationStateId" />
        <result column="application_state_name" jdbcType="VARCHAR" property="applicationStateName" />
        <collection ofType="edu.ruc.labmgr.domain.Equipment" property="equipments">
            <id column="equipment_id" jdbcType="INTEGER" property="id" />
            <result column="equipment_sn" jdbcType="VARCHAR" property="sn" />
            <result column="equipment_name" jdbcType="VARCHAR" property="name" />
            <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
            <result column="model_number" jdbcType="VARCHAR" property="modelNumber" />
            <result column="specifications" jdbcType="VARCHAR" property="specifications" />
            <result column="unit_price" jdbcType="REAL" property="unitPrice" />
            <result column="vender" jdbcType="VARCHAR" property="vender" />
            <result column="factory_number" jdbcType="VARCHAR" property="factoryNumber" />
            <result column="manufacture_date" jdbcType="DATE" property="manufactureDate" />
            <result column="acquisition_date" jdbcType="DATE" property="acquisitionDate" />
            <result column="scrap_date" jdbcType="DATE" property="scrapDate" />
            <result column="country" jdbcType="VARCHAR" property="country" />
            <result column="funding_subject_id" jdbcType="INTEGER" property="fundingSubjectId" />
            <result column="funding_subject" jdbcType="VARCHAR" property="fundingSubject" />
            <result column="use_direction_id" jdbcType="INTEGER" property="useDirectionId" />
            <result column="use_direction" jdbcType="VARCHAR" property="useDirection" />
            <result column="equipment_state_id" jdbcType="INTEGER" property="stateId" />
            <result column="equipment_state_name" jdbcType="VARCHAR" property="state" />
        </collection>
    </resultMap>

    <sql id="Criteria_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
    application_id, application_sn, applicant_id, applicant_name, operator_id, operator_name, approver_id, approver_name,
    apply_time, process_time, application_state_id, application_state_name,
    equipment_id, equipment_sn, equipment_name, category_id, model_number, specifications, unit_price,
    vender, factory_number, manufacture_date, acquisition_date, scrap_date, country, funding_subject_id,
    funding_subject, use_direction_id, use_direction, equipment_state_id, equipment_state_name
  </sql>

    <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.ViewStoreCriteria" resultType="java.lang.Integer">
        select count(distinct application_id)  id from view_store
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause" />
        </if>
    </select>

    <select id="selectByApplyId"  resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from view_store
        where application_id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByCriteriaWithRowbounds" parameterType="edu.ruc.labmgr.domain.ViewStoreCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from view_store
        <if test="_parameter != null">
            <include refid="Criteria_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>