<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ruc.labmgr.mapper.TaskChargerMapper">
  <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.TaskCharger">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="taskId" jdbcType="INTEGER" property="taskid" />
    <result column="chargerId" jdbcType="INTEGER" property="chargerid" />
    <result column="score" jdbcType="INTEGER" property="score" />
      <association column="taskId" javaType="Task" property="task" select="edu.ruc.labmgr.mapper.TaskMapper.selectByPrimaryKey" />
      <association column="chargerId" javaType="User" property="charger" select="edu.ruc.labmgr.mapper.UserMapper.selectByPrimaryKey" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, taskId, chargerId, score
  </sql>
  <select id="selectByExample" parameterType="edu.ruc.labmgr.domain.TaskChargerCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_charger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_charger
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_charger
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ruc.labmgr.domain.TaskChargerCriteria">
    delete from task_charger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ruc.labmgr.domain.TaskCharger">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_charger (taskId, chargerId, score
      )
    values (#{taskid,jdbcType=INTEGER}, #{chargerid,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.TaskCharger">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_charger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskid != null">
        taskId,
      </if>
      <if test="chargerid != null">
        chargerId,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskid != null">
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="chargerid != null">
        #{chargerid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ruc.labmgr.domain.TaskChargerCriteria" resultType="java.lang.Integer">
    select count(*) from task_charger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_charger
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskid != null">
        taskId = #{record.taskid,jdbcType=INTEGER},
      </if>
      <if test="record.chargerid != null">
        chargerId = #{record.chargerid,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_charger
    set id = #{record.id,jdbcType=INTEGER},
      taskId = #{record.taskid,jdbcType=INTEGER},
      chargerId = #{record.chargerid,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.TaskCharger">
    update task_charger
    <set>
      <if test="taskid != null">
        taskId = #{taskid,jdbcType=INTEGER},
      </if>
      <if test="chargerid != null">
        chargerId = #{chargerid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.TaskCharger">
    update task_charger
    set taskId = #{taskid,jdbcType=INTEGER},
      chargerId = #{chargerid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="edu.ruc.labmgr.domain.TaskChargerCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_charger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectTaskChargerList" parameterType="long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from task_charger
        where id in (
        select tc.id
        from task t,task_charger tc
        where
        tc.taskId=t.id
        <if test="chargerId != 0">
            and tc.chargerId= #{chargerId}
        </if>
        <if test="type != 0">
            and t.type=#{type}
        </if>
        and t.taskName like #{taskName}
        <if test="ifCompleted  != 3">
            and t.ifCompleted =#{ifCompleted }
        </if>
        <if test="ifScored != 3">
            and t.ifscored=#{ifScored}
        </if>
        )
    </select>
    <select id="countTaskChargerList" parameterType="long" resultType="java.lang.Integer">
        select
        count(*)
        from task_charger
        where id in (
        select tc.id
        from task t,task_charger tc
        where
        tc.taskId=t.id
        <if test="chargerId != 0">
            and tc.chargerId= #{chargerId}
        </if>
        <if test="type != 0">
            and t.type=#{type}
        </if>
        and t.taskName like #{taskName}
        <if test="ifCompleted  != 3">
            and t.ifCompleted =#{ifCompleted }
        </if>
        <if test="ifScored != 3">
            and t.ifscored=#{ifScored}
        </if>
        )
    </select>

</mapper>