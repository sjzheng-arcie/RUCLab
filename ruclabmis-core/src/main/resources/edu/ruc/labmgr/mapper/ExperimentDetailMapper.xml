<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ruc.labmgr.mapper.ExperimentDetailMapper" >
  <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.ExperimentDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="experiment_id" property="experimentId" jdbcType="INTEGER" />
    <result column="class_student_id" property="classStudentId" jdbcType="INTEGER" />
    <result column="report_path" property="reportPath" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, experiment_id, class_student_id, report_path, score
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ExperimentDetailCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experiment_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from experiment_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from experiment_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.ruc.labmgr.domain.ExperimentDetailCriteria" >
    delete from experiment_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ruc.labmgr.domain.ExperimentDetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into experiment_detail (experiment_id, class_student_id, report_path, 
      score)
    values (#{experimentId,jdbcType=INTEGER}, #{classStudentId,jdbcType=INTEGER}, #{reportPath,jdbcType=VARCHAR}, 
      #{score,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.ExperimentDetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into experiment_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="experimentId != null" >
        experiment_id,
      </if>
      <if test="classStudentId != null" >
        class_student_id,
      </if>
      <if test="reportPath != null" >
        report_path,
      </if>
      <if test="score != null" >
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="experimentId != null" >
        #{experimentId,jdbcType=INTEGER},
      </if>
      <if test="classStudentId != null" >
        #{classStudentId,jdbcType=INTEGER},
      </if>
      <if test="reportPath != null" >
        #{reportPath,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.ruc.labmgr.domain.ExperimentDetailCriteria" resultType="java.lang.Integer" >
    select count(*) from experiment_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update experiment_detail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.experimentId != null" >
        experiment_id = #{record.experimentId,jdbcType=INTEGER},
      </if>
      <if test="record.classStudentId != null" >
        class_student_id = #{record.classStudentId,jdbcType=INTEGER},
      </if>
      <if test="record.reportPath != null" >
        report_path = #{record.reportPath,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update experiment_detail
    set id = #{record.id,jdbcType=INTEGER},
      experiment_id = #{record.experimentId,jdbcType=INTEGER},
      class_student_id = #{record.classStudentId,jdbcType=INTEGER},
      report_path = #{record.reportPath,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.ExperimentDetail" >
    update experiment_detail
    <set >
      <if test="experimentId != null" >
        experiment_id = #{experimentId,jdbcType=INTEGER},
      </if>
      <if test="classStudentId != null" >
        class_student_id = #{classStudentId,jdbcType=INTEGER},
      </if>
      <if test="reportPath != null" >
        report_path = #{reportPath,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.ExperimentDetail" >
    update experiment_detail
    set experiment_id = #{experimentId,jdbcType=INTEGER},
      class_student_id = #{classStudentId,jdbcType=INTEGER},
      report_path = #{reportPath,jdbcType=VARCHAR},
      score = #{score,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ExperimentDetailCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experiment_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectStudentExperimentsWithRowbound" resultType="map" parameterType="java.lang.Integer">
      select ed.*,u.sn,u.name from experiment_detail ed, user u,class_student cs
      where ed.class_student_id = cs.id and cs.student_id = u.id and ed.experiment_id = #{eid,jdbcType=INTEGER}
  </select>

  <select id="countStudentExperiment" resultType="int" parameterType="java.lang.Integer">
      select count(ed.id) from  experiment_detail ed, user u,class_student cs
      where ed.class_student_id = cs.id and cs.student_id = u.id and ed.experiment_id = #{eid,jdbcType=INTEGER}
  </select>
</mapper>