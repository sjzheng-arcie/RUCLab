<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ruc.labmgr.mapper.ArrangementEquipmentMapper" >
  <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.ArrangementEquipmentKey" >
    <id column="arrangement_id" property="arrangementId" jdbcType="INTEGER" />
    <id column="equipment_id" property="equipmentId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Criteria_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause" >
    <where >
      <foreach collection="criteria.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    arrangement_id, equipment_id
  </sql>
  <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ArrangementEquipmentCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from arrangement_equipment
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="edu.ruc.labmgr.domain.ArrangementEquipmentKey" >
    delete from arrangement_equipment
    where arrangement_id = #{arrangementId,jdbcType=INTEGER}
      and equipment_id = #{equipmentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="edu.ruc.labmgr.domain.ArrangementEquipmentCriteria" >
    delete from arrangement_equipment
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ruc.labmgr.domain.ArrangementEquipmentKey" >
    insert into arrangement_equipment (arrangement_id, equipment_id)
    values (#{arrangementId,jdbcType=INTEGER}, #{equipmentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.ArrangementEquipmentKey" >
    insert into arrangement_equipment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="arrangementId != null" >
        arrangement_id,
      </if>
      <if test="equipmentId != null" >
        equipment_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="arrangementId != null" >
        #{arrangementId,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null" >
        #{equipmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.ArrangementEquipmentCriteria" resultType="java.lang.Integer" >
    select count(*) from arrangement_equipment
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map" >
    update arrangement_equipment
    <set >
      <if test="record.arrangementId != null" >
        arrangement_id = #{record.arrangementId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentId != null" >
        equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map" >
    update arrangement_equipment
    set arrangement_id = #{record.arrangementId,jdbcType=INTEGER},
      equipment_id = #{record.equipmentId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <select resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ArrangementEquipmentCriteria" id="selectByCriteriaWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from arrangement_equipment
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>