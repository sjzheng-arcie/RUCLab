<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ruc.labmgr.mapper.TaskscoreMapper">
  <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.Taskscore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="taskId" jdbcType="INTEGER" property="taskid" />
    <result column="markerId" jdbcType="INTEGER" property="markerid" />
    <result column="overallscore" jdbcType="INTEGER" property="overallscore" />
    <result column="completelyscore" jdbcType="INTEGER" property="completelyscore" />
    <result column="timelyscore" jdbcType="INTEGER" property="timelyscore" />
    <result column="qualityscore" jdbcType="INTEGER" property="qualityscore" />
    <result column="spentscore" jdbcType="INTEGER" property="spentscore" />
      <association column="markerId" javaType="User" property="manager" select="edu.ruc.labmgr.mapper.UserMapper.selectByPrimaryKey" />
  </resultMap>
  <sql id="Criteria_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause">
    <where>
      <foreach collection="criteria.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, taskId, markerId, overallscore, completelyscore, timelyscore, qualityscore, spentscore
  </sql>
  <select id="selectByCriteria" parameterType="edu.ruc.labmgr.domain.TaskscoreCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from taskscore
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from taskscore
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from taskscore
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="edu.ruc.labmgr.domain.TaskscoreCriteria">
    delete from taskscore
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ruc.labmgr.domain.Taskscore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into taskscore (taskId, markerId, overallscore, 
      completelyscore, timelyscore, qualityscore, 
      spentscore)
    values (#{taskid,jdbcType=INTEGER}, #{markerid,jdbcType=INTEGER}, #{overallscore,jdbcType=INTEGER}, 
      #{completelyscore,jdbcType=INTEGER}, #{timelyscore,jdbcType=INTEGER}, #{qualityscore,jdbcType=INTEGER}, 
      #{spentscore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.Taskscore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into taskscore
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskid != null">
        taskId,
      </if>
      <if test="markerid != null">
        markerId,
      </if>
      <if test="overallscore != null">
        overallscore,
      </if>
      <if test="completelyscore != null">
        completelyscore,
      </if>
      <if test="timelyscore != null">
        timelyscore,
      </if>
      <if test="qualityscore != null">
        qualityscore,
      </if>
      <if test="spentscore != null">
        spentscore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskid != null">
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="markerid != null">
        #{markerid,jdbcType=INTEGER},
      </if>
      <if test="overallscore != null">
        #{overallscore,jdbcType=INTEGER},
      </if>
      <if test="completelyscore != null">
        #{completelyscore,jdbcType=INTEGER},
      </if>
      <if test="timelyscore != null">
        #{timelyscore,jdbcType=INTEGER},
      </if>
      <if test="qualityscore != null">
        #{qualityscore,jdbcType=INTEGER},
      </if>
      <if test="spentscore != null">
        #{spentscore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.TaskscoreCriteria" resultType="java.lang.Integer">
    select count(*) from taskscore
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map">
    update taskscore
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskid != null">
        taskId = #{record.taskid,jdbcType=INTEGER},
      </if>
      <if test="record.markerid != null">
        markerId = #{record.markerid,jdbcType=INTEGER},
      </if>
      <if test="record.overallscore != null">
        overallscore = #{record.overallscore,jdbcType=INTEGER},
      </if>
      <if test="record.completelyscore != null">
        completelyscore = #{record.completelyscore,jdbcType=INTEGER},
      </if>
      <if test="record.timelyscore != null">
        timelyscore = #{record.timelyscore,jdbcType=INTEGER},
      </if>
      <if test="record.qualityscore != null">
        qualityscore = #{record.qualityscore,jdbcType=INTEGER},
      </if>
      <if test="record.spentscore != null">
        spentscore = #{record.spentscore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update taskscore
    set id = #{record.id,jdbcType=INTEGER},
      taskId = #{record.taskid,jdbcType=INTEGER},
      markerId = #{record.markerid,jdbcType=INTEGER},
      overallscore = #{record.overallscore,jdbcType=INTEGER},
      completelyscore = #{record.completelyscore,jdbcType=INTEGER},
      timelyscore = #{record.timelyscore,jdbcType=INTEGER},
      qualityscore = #{record.qualityscore,jdbcType=INTEGER},
      spentscore = #{record.spentscore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.Taskscore">
    update taskscore
    <set>
      <if test="taskid != null">
        taskId = #{taskid,jdbcType=INTEGER},
      </if>
      <if test="markerid != null">
        markerId = #{markerid,jdbcType=INTEGER},
      </if>
      <if test="overallscore != null">
        overallscore = #{overallscore,jdbcType=INTEGER},
      </if>
      <if test="completelyscore != null">
        completelyscore = #{completelyscore,jdbcType=INTEGER},
      </if>
      <if test="timelyscore != null">
        timelyscore = #{timelyscore,jdbcType=INTEGER},
      </if>
      <if test="qualityscore != null">
        qualityscore = #{qualityscore,jdbcType=INTEGER},
      </if>
      <if test="spentscore != null">
        spentscore = #{spentscore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.Taskscore">
    update taskscore
    set taskId = #{taskid,jdbcType=INTEGER},
      markerId = #{markerid,jdbcType=INTEGER},
      overallscore = #{overallscore,jdbcType=INTEGER},
      completelyscore = #{completelyscore,jdbcType=INTEGER},
      timelyscore = #{timelyscore,jdbcType=INTEGER},
      qualityscore = #{qualityscore,jdbcType=INTEGER},
      spentscore = #{spentscore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCriteriaWithRowbounds" parameterType="edu.ruc.labmgr.domain.TaskscoreCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from taskscore
    <if test="_parameter != null">
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>