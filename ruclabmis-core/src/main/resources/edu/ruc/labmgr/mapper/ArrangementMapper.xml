<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ruc.labmgr.mapper.ArrangementMapper" >
  <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.Arrangement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="approval_id" property="approvalId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="approval_opinion" property="approvalOpinion" jdbcType="VARCHAR" />
    <result column="term_year" property="termYear" jdbcType="INTEGER" />
    <result column="week" property="week" jdbcType="INTEGER" />
    <result column="wDay" property="wday" jdbcType="INTEGER" />
    <result column="section" property="section" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Criteria_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause" >
    <where >
      <foreach collection="criteria.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, state, approval_id, user_id, description, approval_opinion, term_year, week, 
    wDay, section
  </sql>
  <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from arrangement
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from arrangement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from arrangement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" >
    delete from arrangement
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.ruc.labmgr.domain.Arrangement" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into arrangement (state, approval_id, user_id, 
      description, approval_opinion, term_year, 
      week, wDay, section
      )
    values (#{state,jdbcType=TINYINT}, #{approvalId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{approvalOpinion,jdbcType=VARCHAR}, #{termYear,jdbcType=INTEGER}, 
      #{week,jdbcType=INTEGER}, #{wday,jdbcType=INTEGER}, #{section,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.Arrangement" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into arrangement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="state != null" >
        state,
      </if>
      <if test="approvalId != null" >
        approval_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="approvalOpinion != null" >
        approval_opinion,
      </if>
      <if test="termYear != null" >
        term_year,
      </if>
      <if test="week != null" >
        week,
      </if>
      <if test="wday != null" >
        wDay,
      </if>
      <if test="section != null" >
        section,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="approvalId != null" >
        #{approvalId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="approvalOpinion != null" >
        #{approvalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null" >
        #{termYear,jdbcType=INTEGER},
      </if>
      <if test="week != null" >
        #{week,jdbcType=INTEGER},
      </if>
      <if test="wday != null" >
        #{wday,jdbcType=INTEGER},
      </if>
      <if test="section != null" >
        #{section,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" resultType="java.lang.Integer" >
    select count(*) from arrangement
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map" >
    update arrangement
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.approvalId != null" >
        approval_id = #{record.approvalId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalOpinion != null" >
        approval_opinion = #{record.approvalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.termYear != null" >
        term_year = #{record.termYear,jdbcType=INTEGER},
      </if>
      <if test="record.week != null" >
        week = #{record.week,jdbcType=INTEGER},
      </if>
      <if test="record.wday != null" >
        wDay = #{record.wday,jdbcType=INTEGER},
      </if>
      <if test="record.section != null" >
        section = #{record.section,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map" >
    update arrangement
    set id = #{record.id,jdbcType=INTEGER},
      state = #{record.state,jdbcType=TINYINT},
      approval_id = #{record.approvalId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      approval_opinion = #{record.approvalOpinion,jdbcType=VARCHAR},
      term_year = #{record.termYear,jdbcType=INTEGER},
      week = #{record.week,jdbcType=INTEGER},
      wDay = #{record.wday,jdbcType=INTEGER},
      section = #{record.section,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.Arrangement" >
    update arrangement
    <set >
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="approvalId != null" >
        approval_id = #{approvalId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="approvalOpinion != null" >
        approval_opinion = #{approvalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="termYear != null" >
        term_year = #{termYear,jdbcType=INTEGER},
      </if>
      <if test="week != null" >
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="wday != null" >
        wDay = #{wday,jdbcType=INTEGER},
      </if>
      <if test="section != null" >
        section = #{section,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.Arrangement" >
    update arrangement
    set state = #{state,jdbcType=TINYINT},
      approval_id = #{approvalId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      approval_opinion = #{approvalOpinion,jdbcType=VARCHAR},
      term_year = #{termYear,jdbcType=INTEGER},
      week = #{week,jdbcType=INTEGER},
      wDay = #{wday,jdbcType=INTEGER},
      section = #{section,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" id="selectByCriteriaWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from arrangement
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>