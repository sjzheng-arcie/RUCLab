<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ruc.labmgr.mapper.ArrangementMapper" >
    <resultMap id="BaseResultMap" type="edu.ruc.labmgr.domain.Arrangement" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="date" property="date" jdbcType="DATE" />
        <result column="period" property="period" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="SMALLINT" />
        <result column="room_id" property="roomId" jdbcType="INTEGER" />
        <result column="approval_id" property="approvalId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="approval_opinion" property="approvalOpinion" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Criteria_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Criteria_Where_Clause" >
        <where >
            <foreach collection="criteria.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    id, date, period, state, room_id, approval_id, user_id, description, approval_opinion
  </sql>
    <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from arrangement
        <if test="_parameter != null" >
            <include refid="Criteria_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from arrangement
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from arrangement
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByCriteria" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" >
        delete from arrangement
        <if test="_parameter != null" >
            <include refid="Criteria_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="edu.ruc.labmgr.domain.Arrangement" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into arrangement (id, date, period,
        state, room_id, approval_id,
        user_id, description, approval_opinion
        )
        values (#{id,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{period,jdbcType=TIMESTAMP},
        #{state,jdbcType=SMALLINT}, #{roomId,jdbcType=INTEGER}, #{approvalId,jdbcType=INTEGER},
        #{userId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{approvalOpinion,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="edu.ruc.labmgr.domain.Arrangement" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into arrangement
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="date != null" >
                date,
            </if>
            <if test="period != null" >
                period,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="roomId != null" >
                room_id,
            </if>
            <if test="approvalId != null" >
                approval_id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="approvalOpinion != null" >
                approval_opinion,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="date != null" >
                #{date,jdbcType=DATE},
            </if>
            <if test="period != null" >
                #{period,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                #{state,jdbcType=SMALLINT},
            </if>
            <if test="roomId != null" >
                #{roomId,jdbcType=INTEGER},
            </if>
            <if test="approvalId != null" >
                #{approvalId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="approvalOpinion != null" >
                #{approvalOpinion,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByCriteria" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" resultType="java.lang.Integer" >
        select count(*) from arrangement
        <if test="_parameter != null" >
            <include refid="Criteria_Where_Clause" />
        </if>
    </select>
    <update id="updateByCriteriaSelective" parameterType="map" >
        update arrangement
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.date != null" >
                date = #{record.date,jdbcType=DATE},
            </if>
            <if test="record.period != null" >
                period = #{record.period,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null" >
                state = #{record.state,jdbcType=SMALLINT},
            </if>
            <if test="record.roomId != null" >
                room_id = #{record.roomId,jdbcType=INTEGER},
            </if>
            <if test="record.approvalId != null" >
                approval_id = #{record.approvalId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.description != null" >
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.approvalOpinion != null" >
                approval_opinion = #{record.approvalOpinion,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Criteria_Where_Clause" />
        </if>
    </update>
    <update id="updateByCriteria" parameterType="map" >
        update arrangement
        set id = #{record.id,jdbcType=INTEGER},
        date = #{record.date,jdbcType=DATE},
        period = #{record.period,jdbcType=TIMESTAMP},
        state = #{record.state,jdbcType=SMALLINT},
        room_id = #{record.roomId,jdbcType=INTEGER},
        approval_id = #{record.approvalId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        description = #{record.description,jdbcType=VARCHAR},
        approval_opinion = #{record.approvalOpinion,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Criteria_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="edu.ruc.labmgr.domain.Arrangement" >
        update arrangement
        <set >
            <if test="date != null" >
                date = #{date,jdbcType=DATE},
            </if>
            <if test="period != null" >
                period = #{period,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=SMALLINT},
            </if>
            <if test="roomId != null" >
                room_id = #{roomId,jdbcType=INTEGER},
            </if>
            <if test="approvalId != null" >
                approval_id = #{approvalId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="approvalOpinion != null" >
                approval_opinion = #{approvalOpinion,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="edu.ruc.labmgr.domain.Arrangement" >
    update arrangement
    set date = #{date,jdbcType=DATE},
      period = #{period,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=SMALLINT},
      room_id = #{roomId,jdbcType=INTEGER},
      approval_id = #{approvalId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      approval_opinion = #{approvalOpinion,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select resultMap="BaseResultMap" parameterType="edu.ruc.labmgr.domain.ArrangementCriteria" id="selectByCriteriaWithRowbounds" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from arrangement
        <if test="_parameter != null" >
            <include refid="Criteria_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
</mapper>